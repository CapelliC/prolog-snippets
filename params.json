{"name":"Prolog-snippets","tagline":"Some sparse Prolog code I wrote (and sometime used)","body":"Some note on components\r\n\r\n+ lifter  : descriptive functions - a bit of user friendly Prolog\r\n+ dirtree : a declarative interface to file system (xml at work), and a bit of ftp\r\n+ lag     : linear aggregation - just a sketch by now, showing how efficient aggregation can be performed in Prolog\r\n\r\nAbout lifter, I can't resist...\r\n\r\nhere is part of a comment from SWI-Prolog mailing list [https://lists.iai.uni-bonn.de/pipermail/swi-prolog/2013/011893.html],\r\nexplaining what lifter is.\r\n\r\nFrom the very first lifter' users:\r\n\r\n===========\r\n\r\nWith `lifter`, the clause\r\n\r\n    longer(A,B) :-\r\n        length(A,ยบ) > length(B,ยบ).\r\n\r\nis expanded to\r\n\r\n    longer(A, B) :-\r\n        length(A, C),\r\n        length(B, D),\r\n        C > D.\r\n\r\nI like that this approach satisfies the desire for expressions that\r\n\"evaluate in place\" but keeps the flexibility and potent, multi-directional\r\nfunctionality of prolog relations.\r\n\r\n===========\r\n\r\nLicense LGPL V2.1\r\nAuthor Ing. Capelli Carlo\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}